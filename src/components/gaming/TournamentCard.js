import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst TournamentCard = ({ tournament, index, className = '' }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  // Placement styling based on tournament result\n  const getPlacementStyle = (placement) => {\n    if (placement === 1) {\n      return {\n        bg: 'bg-gradient-to-br from-yellow-500/20 to-yellow-600/20',\n        border: 'border-yellow-500',\n        text: 'text-yellow-400',\n        glow: 'shadow-yellow-500/50',\n        icon: 'ü•á',\n        label: '1ST PLACE'\n      };\n    } else if (placement === 2) {\n      return {\n        bg: 'bg-gradient-to-br from-gray-400/20 to-gray-500/20',\n        border: 'border-gray-400',\n        text: 'text-gray-300',\n        glow: 'shadow-gray-400/50',\n        icon: 'ü•à',\n        label: '2ND PLACE'\n      };\n    } else if (placement === 3) {\n      return {\n        bg: 'bg-gradient-to-br from-orange-600/20 to-orange-700/20',\n        border: 'border-orange-600',\n        text: 'text-orange-400',\n        glow: 'shadow-orange-600/50',\n        icon: 'ü•â',\n        label: '3RD PLACE'\n      };\n    } else if (placement <= 8) {\n      return {\n        bg: 'bg-gradient-to-br from-green-600/20 to-green-700/20',\n        border: 'border-green-600',\n        text: 'text-green-400',\n        glow: 'shadow-green-600/50',\n        icon: 'üèÜ',\n        label: `${placement}TH PLACE`\n      };\n    } else {\n      return {\n        bg: 'bg-gradient-to-br from-gr-700/20 to-gray-800/20',\n        border: 'border-gray-600',\n        text: 'text-gray-400',\n        glow: 'shadow-gray-600/50',\n        icon: 'üéØ',\n        label: `${placement}TH PLACE`\n      };\n    }\n  };\n\n  const placementStyle = getPlacementStyle(tournament.placement);\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const formatPrize = (amount) => {\n    if (amount >= 1000) {\n      return `$${(amount / 1000).toFixed(1)}K`;\n    }\n    return `$${amount}`;\n  };\n\n  return (\n    <motion.div\n      className={`relative ${className}`}\n      initial={{ opacity: 0, y: 50, rotateX: -15 }}\n      animate={{ \n        opacity: 1, \n        y: 0, \n        rotateX: 0,\n        boxShadow: isHovered ? `0 15px 40px ${placementStyle.glow.split('/')[0]}/40` : '0 10px 30px rgba(0, 0, 0, 0.3)'\n      }}\n      transition={{\n        duration: 0.8,\n        delay: index * 0.1,\n        type: \"spring\",\n        stiffness: 100\n      }}\n      whileHover={{ scale: 1.02 }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div className={`\n        relative p-6 rounded-lg border-2 cursor-pointer transition-all duration-500\n        ${placementStyle.bg} ${placementStyle.border}\n        ${isHovered ? `shadow-lg ${placementStyle.glow}` : ''}\n      `}\n      onClick={() => setIsExpanded(!isExpanded)}\n      >\n        {/* Placement Badge */}\n        <div className={`\n          absolute -top-3 -right-3 px-3 py-1 rounded-full text-xs font-bold\n          ${placementStyle.bg} ${placementStyle.border} border-2 ${placementStyle.text}\n          flex items-center gap-1\n        `}>\n          <span>{placementStyle.icon}</span>\n          <span>{placementStyle.label}</span>\n        </div>\n\n        {/* Tournament Header */}\n        <div className=\"mb-4\">\n          <div className=\"flex items-start justify-between mb-2\">\n            <div className=\"flex-1\">\n              <h3 className={`text-lg font-bold ${placementStyle.text} mb-1 leading-tight`}>\n                {tournament.name}\n              </h3>\n              <div className=\"flex items-center gap-2 text-sm text-gray-400\">\n                <span>üéÆ {tournament.game}</span>\n                <span>‚Ä¢</span>\n                <span>üìÖ {formatDate(tournament.date)}</span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Tournament Type and Format */}\n          <div className=\"flex items-center gap-3 text-xs\">\n            <span className={`px-2 py-1 rounded ${placementStyle.bg} ${placementStyle.text} border ${placementStyle.border}`}>\n              {tournament.type}\n            </span>\n            <span className=\"text-gray-400\">\n              {tournament.format} ‚Ä¢ {tournament.participants} players\n            </span>\n          </div>\n        </div>\n\n        {/* Key Stats */}\n        <div className=\"grid grid-cols-2 gap-4 mb-4\">\n          <div className=\"text-center\">\n            <div className={`text-xl font-bold ${placementStyle.text}`}>\n              #{tournament.placement}\n            </div>\n            <div className=\"text-xs text-gray-400\">Final Placement</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-xl font-bold text-green-400\">\n              {tournament.prizeEarned ? formatPrize(tournament.prizeEarned) : '$0'}\n            </div>\n            <div className=\"text-xs text-gray-400\">Prize Earned</div>\n          </div>\n        </div>\n\n        {/* Team Information */}\n        {tournament.team && (\n          <div className=\"mb-4 p-3 bg-gray-800/50 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <span className=\"text-cyan-400\">üë•</span>\n              <span className=\"text-sm font-medium text-cyan-400\">Team: {tournament.team.name}</span>\n            </div>\n            <div className=\"text-xs text-gray-400\">\n              Role: <span className=\"text-green-400\">{tournament.team.role}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Expand/Collapse Indicator */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2 text-xs text-gray-400\">\n            <span>üèüÔ∏è {tournament.location}</span>\n          </div>\n          <motion.div\n            className={`text-sm ${placementStyle.text} flex items-center gap-1`}\n            animate={{ rotate: isExpanded ? 180 : 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <span className=\"text-xs\">Details</span>\n            <span>‚ñº</span>\n          </motion.div>\n        </div>\n\n        {/* Hover glow effect */}\n        <motion.div\n          className={`absolute inset-0 rounded-lg ${placementStyle.bg} opacity-0 pointer-events-none`}\n          animate={{ opacity: isHovered ? 0.3 : 0 }}\n          transition={{ duration: 0.3 }}\n        />\n      </div>\n\n      {/* Expanded Details */}\n      <AnimatePresence>\n        {isExpanded && (\n          <motion.div\n            className=\"mt-4 overflow-hidden\"\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.3, ease: \"easeInOut\" }}\n          >\n            <div className=\"bg-gray-800/50 rounded-lg border border-gray-700 p-4 space-y-4\">\n              {/* Tournament Description */}\n              {tournament.description && (\n                <div>\n                  <h4 className=\"text-sm font-semibold text-green-400 mb-2\">About Tournament</h4>\n                  <p className=\"text-sm text-gray-300 leading-relaxed\">\n                    {tournament.description}\n                  </p>\n                </div>\n              )}\n\n              {/* Performance Highlights */}\n              {tournament.highlights && tournament.highlights.length > 0 && (\n                <div>\n                  <h4 className=\"text-sm font-semibold text-green-400 mb-2\">Performance Highlights</h4>\n                  <ul className=\"space-y-1\">\n                    {tournament.highlights.map((highlight, idx) => (\n                      <li key={idx} className=\"text-sm text-gray-300 flex items-start gap-2\">\n                        <span className=\"text-cyan-400 mt-0.5\">‚ñ∂</span>\n                        <span>{highlight}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              {/* Detailed Stats */}\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div>\n                  <h4 className=\"text-sm font-semibold text-green-400 mb-2\">Tournament Details</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-400\">Total Prize Pool:</span>\n                      <span className=\"text-green-400\">\n                        {tournament.totalPrizePool ? formatPrize(tournament.totalPrizePool) : 'N/A'}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-400\">Duration:</span>\n                      <span className=\"text-cyan-400\">{tournament.duration || 'N/A'}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-400\">Organizer:</span>\n                      <span className=\"text-purple-400\">{tournament.organizer || 'N/A'}</span>\n                    </div>\n                  </div>\n                </div>\n\n                {tournament.team && (\n                  <div>\n                    <h4 className=\"text-sm font-semibold text-green-400 mb-2\">Team Performance</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">Team Size:</span>\n                        <span className=\"text-cyan-400\">{tournament.team.size || 'N/A'}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-400\">My Role:</span>\n                        <span className=\"text-green-400\">{tournament.team.role}</span>\n                      </div>\n                      {tournament.team.mvp && (\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-400\">MVP:</span>\n                          <span className=\"text-yellow-400\">üèÜ Yes</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Skills Demonstrated */}\n              {tournament.skillsDemonstrated && tournament.skillsDemonstrated.length > 0 && (\n                <div>\n                  <h4 className=\"text-sm font-semibold text-green-400 mb-2\">Skills Demonstrated</h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {tournament.skillsDemonstrated.map((skill, idx) => (\n                      <span\n                        key={idx}\n                        className=\"text-xs px-2 py-1 bg-cyan-500/20 text-cyan-300 rounded border border-cyan-500/30\"\n                      >\n                        {skill}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Close button */}\n              <div className=\"flex justify-center pt-2\">\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setIsExpanded(false);\n                  }}\n                  className={`\n                    text-xs px-4 py-2 rounded-lg border transition-colors\n                    ${placementStyle.border} ${placementStyle.text} hover:${placementStyle.bg}\n                  `}\n                >\n                  Close Details\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n\nexport default TournamentCard;"
